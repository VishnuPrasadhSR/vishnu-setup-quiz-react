{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["table","sports","history","politics","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","amount","category","difficulty","quiz","setQuiz","isModalOpen","setIsModalOpen","fetchQuestions","url","a","axios","catch","err","console","log","resp","data","results","length","nextQuestion","oldIndex","newIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","onClick","Loading","Modal","toFixed","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71c5d3a1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useContext, useEffect } from \"react\";\r\n\r\nconst table = {\r\n  sports: 21,\r\n  history: 23,\r\n  politics: 24,\r\n};\r\n\r\nconst API_ENDPOINT = \"https://opentdb.com/api.php?\";\r\n\r\nconst url = \"\";\r\nconst tempUrl =\r\n  \"https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [waiting, setWaiting] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [correct, setCorrect] = useState(0);\r\n  const [error, setError] = useState(false);\r\n  const [quiz, setQuiz] = useState({\r\n    amount: 10,\r\n    category: \"sports\",\r\n    difficulty: \"easy\",\r\n  });\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const fetchQuestions = async (url) => {\r\n    setLoading(true);\r\n    setWaiting(false);\r\n    const resp = await axios(url).catch((err) => console.log(err));\r\n    if (resp) {\r\n      const data = resp.data.results;\r\n      if (data.length > 0) {\r\n        setQuestions(data);\r\n        setLoading(false);\r\n        setWaiting(false);\r\n        setError(false);\r\n      } else {\r\n        setWaiting(true);\r\n        setError(true);\r\n      }\r\n    } else {\r\n      setWaiting(true);\r\n    }\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    setIndex((oldIndex) => {\r\n      const newIndex = oldIndex + 1;\r\n      if (newIndex > questions.length - 1) {\r\n        openModal();\r\n        return 0;\r\n      } else {\r\n        return newIndex;\r\n      }\r\n    });\r\n  };\r\n\r\n  const checkAnswer = (value) => {\r\n    if (value) {\r\n      setCorrect((oldState) => {\r\n        return oldState + 1;\r\n      });\r\n    }\r\n    nextQuestion();\r\n  };\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setWaiting(true);\r\n    setCorrect(0);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setQuiz({ ...quiz, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { amount, category, difficulty } = quiz;\r\n\r\n    const url = `${API_ENDPOINT}amount=${amount}&category=${table[category]}&difficulty=${difficulty}&type=multiple`;\r\n    fetchQuestions(url);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        waiting,\r\n        loading,\r\n        questions,\r\n        index,\r\n        correct,\r\n        error,\r\n        isModalOpen,\r\n        nextQuestion,\r\n        checkAnswer,\r\n        closeModal,\r\n        quiz,\r\n        handleChange,\r\n        handleSubmit,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n// make sure use\r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider };\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst SetupForm = () => {\r\n  const { quiz, handleChange, handleSubmit, error } = useGlobalContext();\r\n  return (\r\n    <main>\r\n      <section className=\"quiz quiz-small\">\r\n        <form className=\"setup-form\">\r\n          <h2>Vishnu setup quiz</h2>\r\n          {/* amount */}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\">number of questions</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"amount\"\r\n              id=\"amount\"\r\n              className=\"form-input\"\r\n              value={quiz.amount}\r\n              onChange={handleChange}\r\n              min={1}\r\n              max={50}\r\n            />\r\n          </div>\r\n          {/*end of amount */}\r\n\r\n          {/* category */}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"category\">category</label>\r\n            <select\r\n              name=\"category\"\r\n              id=\"category\"\r\n              className=\"form-input\"\r\n              value={quiz.category}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"sports\">sports</option>\r\n              <option value=\"history\">history</option>\r\n              <option value=\"politics\">politics</option>\r\n            </select>\r\n          </div>\r\n          {/*end of category */}\r\n\r\n          {/* difficulty */}\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"difficulty\">select difficulty</label>\r\n            <select\r\n              name=\"difficulty\"\r\n              id=\"difficulty\"\r\n              className=\"form-input\"\r\n              value={quiz.difficulty}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"easy\">easy</option>\r\n              <option value=\"medium\">medium</option>\r\n              <option value=\"hard\">hard</option>\r\n            </select>\r\n          </div>\r\n          {/*end of difficulty */}\r\n\r\n          {error && (\r\n            <p className=\"error\">\r\n              can't generate questions, please try different options\r\n            </p>\r\n          )}\r\n          <button type=\"submit\" onClick={handleSubmit} className=\"submit-btn\">\r\n            start\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default SetupForm;\r\n","import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <main>\r\n      <div className='loading'></div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nconst Modal = () => {\r\n  const { isModalOpen, closeModal, correct, questions } = useGlobalContext();\r\n  return (\r\n    <div\r\n      className={`${\r\n        isModalOpen ? \"modal-container isOpen\" : \"modal-container\"\r\n      }`}\r\n    >\r\n      <div className=\"modal-content\">\r\n        <h2>congrats!</h2>\r\n        <p>\r\n          You answered {((correct / questions.length) * 100).toFixed(0)}% of\r\n          questions correctly\r\n        </p>\r\n        <button className=\"close-btn\" onClick={closeModal}>\r\n          play again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport { useGlobalContext } from \"./context\";\r\n\r\nimport SetupForm from \"./SetupForm\";\r\nimport Loading from \"./Loading\";\r\nimport Modal from \"./Modal\";\r\nfunction App() {\r\n  const {\r\n    waiting,\r\n    loading,\r\n    questions,\r\n    index,\r\n    correct,\r\n    nextQuestion,\r\n    checkAnswer,\r\n  } = useGlobalContext();\r\n  if (waiting) {\r\n    return <SetupForm />;\r\n  }\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  const { question, incorrect_answers, correct_answer } = questions[index];\r\n  // const answers = [...incorrect_answers, correct_answer];\r\n  let answers = [...incorrect_answers];\r\n  const tempIndex = Math.floor(Math.random() * 4);\r\n  if (tempIndex === 3) {\r\n    answers.push(correct_answer);\r\n  } else {\r\n    answers.push(answers[tempIndex]);\r\n    answers[tempIndex] = correct_answer;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <Modal />\r\n      <section className=\"quiz\">\r\n        <p className=\"correct-answers\">\r\n          correct answers : {correct}/{index}\r\n        </p>\r\n        <article className=\"container\">\r\n          <h2 dangerouslySetInnerHTML={{ __html: question }} />\r\n          <div className=\"btn-container\">\r\n            {answers.map((answer, index) => {\r\n              return (\r\n                <button\r\n                  key={index}\r\n                  className=\"answer-btn\"\r\n                  dangerouslySetInnerHTML={{ __html: answer }}\r\n                  onClick={() => checkAnswer(correct_answer === answer)}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </article>\r\n        <button className=\"next-question\" onClick={nextQuestion}>\r\n          next question\r\n        </button>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AppProvider } from './context'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n      <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}